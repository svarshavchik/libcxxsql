LIBCXX_SQL_GETINFO_DECL(bool, config_get_accessible_procedures)
LIBCXX_SQL_GETINFO_IMPL(SQL_ACCESSIBLE_PROCEDURES, bool, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_accessible_tables)
LIBCXX_SQL_GETINFO_IMPL(SQL_ACCESSIBLE_TABLES, bool, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_active_environments)
LIBCXX_SQL_GETINFO_IMPL(SQL_ACTIVE_ENVIRONMENTS, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_aggregate_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_AGGREGATE_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_AF_ALL) E(SQL_AF_AVG) E(SQL_AF_COUNT) E(SQL_AF_DISTINCT) E(SQL_AF_MAX) E(SQL_AF_MIN) E(SQL_AF_SUM) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_alter_domain)
LIBCXX_SQL_GETINFO_IMPL(SQL_ALTER_DOMAIN, ENUM, SQLUINTEGER, E(SQL_AD_ADD_CONSTRAINT_DEFERRABLE) E(SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED) E(SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE) E(SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE) E(SQL_AD_ADD_DOMAIN_CONSTRAINT) E(SQL_AD_ADD_DOMAIN_DEFAULT) E(SQL_AD_CONSTRAINT_NAME_DEFINITION) E(SQL_AD_DROP_DOMAIN_CONSTRAINT) E(SQL_AD_DROP_DOMAIN_DEFAULT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_alter_table)
LIBCXX_SQL_GETINFO_IMPL(SQL_ALTER_TABLE, ENUM, SQLUINTEGER, E(SQL_AT_ADD_COLUMN_COLLATION) E(SQL_AT_ADD_COLUMN_DEFAULT) E(SQL_AT_ADD_COLUMN_SINGLE) E(SQL_AT_ADD_CONSTRAINT) E(SQL_AT_ADD_TABLE_CONSTRAINT) E(SQL_AT_CONSTRAINT_DEFERRABLE) E(SQL_AT_CONSTRAINT_INITIALLY_DEFERRED) E(SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE) E(SQL_AT_CONSTRAINT_NAME_DEFINITION) E(SQL_AT_CONSTRAINT_NON_DEFERRABLE) E(SQL_AT_DROP_COLUMN_CASCADE) E(SQL_AT_DROP_COLUMN_DEFAULT) E(SQL_AT_DROP_COLUMN_RESTRICT) E(SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE) E(SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT) E(SQL_AT_SET_COLUMN_DEFAULT) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_async_dbc_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_ASYNC_DBC_FUNCTIONS, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_async_mode)
LIBCXX_SQL_GETINFO_IMPL(SQL_ASYNC_MODE, ENUM, SQLUINTEGER, E(SQL_AM_CONNECTION) E(SQL_AM_NONE) E(SQL_AM_STATEMENT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_batch_row_count)
LIBCXX_SQL_GETINFO_IMPL(SQL_BATCH_ROW_COUNT, ENUM, SQLUINTEGER, E(SQL_BRC_EXPLICIT) E(SQL_BRC_PROCEDURES) E(SQL_BRC_ROLLED_UP) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_batch_support)
LIBCXX_SQL_GETINFO_IMPL(SQL_BATCH_SUPPORT, ENUM, SQLUINTEGER, E(SQL_BS_ROW_COUNT_EXPLICIT) E(SQL_BS_ROW_COUNT_PROC) E(SQL_BS_SELECT_EXPLICIT) E(SQL_BS_SELECT_PROC) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_bookmark_persistence)
LIBCXX_SQL_GETINFO_IMPL(SQL_BOOKMARK_PERSISTENCE, ENUM, SQLUINTEGER, E(SQL_BP_CLOSE) E(SQL_BP_DELETE) E(SQL_BP_DROP) E(SQL_BP_OTHER_HSTMT) E(SQL_BP_TRANSACTION) E(SQL_BP_UPDATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_catalog_location)
LIBCXX_SQL_GETINFO_IMPL(SQL_CATALOG_LOCATION, ENUM, SQLUSMALLINT, E(SQL_CL_END) E(SQL_CL_START) )
LIBCXX_SQL_GETINFO_DECL(bool, config_get_catalog_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_CATALOG_NAME, bool, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_catalog_name_separator)
LIBCXX_SQL_GETINFO_IMPL(SQL_CATALOG_NAME_SEPARATOR, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_catalog_term)
LIBCXX_SQL_GETINFO_IMPL(SQL_CATALOG_TERM, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_catalog_usage)
LIBCXX_SQL_GETINFO_IMPL(SQL_CATALOG_USAGE, ENUM, SQLUINTEGER, E(SQL_CU_DML_STATEMENTS) E(SQL_CU_INDEX_DEFINITION) E(SQL_CU_PRIVILEGE_DEFINITION) E(SQL_CU_PROCEDURE_INVOCATION) E(SQL_CU_TABLE_DEFINITION) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_collation_seq)
LIBCXX_SQL_GETINFO_IMPL(SQL_COLLATION_SEQ, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_column_alias)
LIBCXX_SQL_GETINFO_IMPL(SQL_COLUMN_ALIAS, bool, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_concat_null_behavior)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONCAT_NULL_BEHAVIOR, ENUM, SQLUSMALLINT, E(SQL_CB_NON_NULL) E(SQL_CB_NULL) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_bigint)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_BIGINT, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_binary)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_BINARY, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_bit)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_BIT, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_char)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_CHAR, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_guid)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_GUID, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_date)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_DATE, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_decimal)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_DECIMAL, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_double)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_DOUBLE, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_float)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_FLOAT, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_integer)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_INTEGER, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_interval_year_month)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_INTERVAL_YEAR_MONTH, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_interval_day_time)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_INTERVAL_DAY_TIME, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_longvarbinary)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_LONGVARBINARY, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_longvarchar)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_LONGVARCHAR, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_numeric)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_NUMERIC, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_real)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_REAL, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_smallint)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_SMALLINT, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_time)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_TIME, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_timestamp)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_TIMESTAMP, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_tinyint)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_TINYINT, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_varbinary)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_VARBINARY, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_varchar)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_VARCHAR, ENUM, SQLUINTEGER, E(SQL_CVT_BIGINT) E(SQL_CVT_BINARY) E(SQL_CVT_BIT) E(SQL_CVT_CHAR) E(SQL_CVT_DATE) E(SQL_CVT_DECIMAL) E(SQL_CVT_DOUBLE) E(SQL_CVT_FLOAT) E(SQL_CVT_GUID) E(SQL_CVT_INTEGER) E(SQL_CVT_INTERVAL_DAY_TIME) E(SQL_CVT_INTERVAL_YEAR_MONTH) E(SQL_CVT_LONGVARBINARY) E(SQL_CVT_LONGVARCHAR) E(SQL_CVT_NUMERIC) E(SQL_CVT_REAL) E(SQL_CVT_SMALLINT) E(SQL_CVT_TIME) E(SQL_CVT_TIMESTAMP) E(SQL_CVT_TINYINT) E(SQL_CVT_VARBINARY) E(SQL_CVT_VARCHAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_convert_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_CONVERT_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_FN_CVT_CAST) E(SQL_FN_CVT_CONVERT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_correlation_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_CORRELATION_NAME, ENUM, SQLUSMALLINT, E(SQL_CN_ANY) E(SQL_CN_DIFFERENT) E(SQL_CN_NONE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_create_assertion)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_ASSERTION, ENUM, SQLUINTEGER, E(SQL_CA_CONSTRAINT_DEFERRABLE) E(SQL_CA_CONSTRAINT_INITIALLY_DEFERRED) E(SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE) E(SQL_CA_CONSTRAINT_NON_DEFERRABLE) E(SQL_CA_CREATE_ASSERTION) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_create_character_set)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_CHARACTER_SET, ENUM, SQLUINTEGER, E(SQL_CCS_COLLATE_CLAUSE) E(SQL_CCS_CREATE_CHARACTER_SET) E(SQL_CCS_LIMITED_COLLATION) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_create_collation)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_COLLATION, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_create_domain)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_DOMAIN, ENUM, SQLUINTEGER, E(SQL_CDO_COLLATION) E(SQL_CDO_CONSTRAINT) E(SQL_CDO_CONSTRAINT_DEFERRABLE) E(SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED) E(SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE) E(SQL_CDO_CONSTRAINT_NAME_DEFINITION) E(SQL_CDO_CONSTRAINT_NON_DEFERRABLE) E(SQL_CDO_CREATE_DOMAIN) E(SQL_CDO_DEFAULT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_create_schema)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_SCHEMA, ENUM, SQLUINTEGER, E(SQL_CS_AUTHORIZATION) E(SQL_CS_CREATE_SCHEMA) E(SQL_CS_DEFAULT_CHARACTER_SET) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_create_table)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_TABLE, ENUM, SQLUINTEGER, E(SQL_CT_COLUMN_COLLATION) E(SQL_CT_COLUMN_CONSTRAINT) E(SQL_CT_COLUMN_DEFAULT) E(SQL_CT_COMMIT_DELETE) E(SQL_CT_COMMIT_PRESERVE) E(SQL_CT_CONSTRAINT_DEFERRABLE) E(SQL_CT_CONSTRAINT_INITIALLY_DEFERRED) E(SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE) E(SQL_CT_CONSTRAINT_NAME_DEFINITION) E(SQL_CT_CONSTRAINT_NON_DEFERRABLE) E(SQL_CT_CREATE_TABLE) E(SQL_CT_GLOBAL_TEMPORARY) E(SQL_CT_LOCAL_TEMPORARY) E(SQL_CT_TABLE_CONSTRAINT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_create_translation)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_TRANSLATION, ENUM, SQLUINTEGER, E(SQL_CTR_CREATE_TRANSLATION) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_create_view)
LIBCXX_SQL_GETINFO_IMPL(SQL_CREATE_VIEW, ENUM, SQLUINTEGER, E(SQL_CV_CASCADED) E(SQL_CV_CHECK_OPTION) E(SQL_CV_CREATE_VIEW) E(SQL_CV_LOCAL) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_cursor_commit_behavior)
LIBCXX_SQL_GETINFO_IMPL(SQL_CURSOR_COMMIT_BEHAVIOR, ENUM, SQLUSMALLINT, E(SQL_CB_CLOSE) E(SQL_CB_DELETE) E(SQL_CB_PRESERVE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_cursor_rollback_behavior)
LIBCXX_SQL_GETINFO_IMPL(SQL_CURSOR_ROLLBACK_BEHAVIOR, ENUM, SQLUSMALLINT, E(SQL_CB_CLOSE) E(SQL_CB_DELETE) E(SQL_CB_PRESERVE) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_cursor_sensitivity)
LIBCXX_SQL_GETINFO_IMPL(SQL_CURSOR_SENSITIVITY, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_data_source_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_DATA_SOURCE_NAME, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_data_source_read_only)
LIBCXX_SQL_GETINFO_IMPL(SQL_DATA_SOURCE_READ_ONLY, bool, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_database_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_DATABASE_NAME, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_datetime_literals)
LIBCXX_SQL_GETINFO_IMPL(SQL_DATETIME_LITERALS, ENUM, SQLUINTEGER, E(SQL_DL_SQL92_DATE) E(SQL_DL_SQL92_INTERVAL_DAY) E(SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR) E(SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE) E(SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND) E(SQL_DL_SQL92_INTERVAL_HOUR) E(SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE) E(SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND) E(SQL_DL_SQL92_INTERVAL_MINUTE) E(SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND) E(SQL_DL_SQL92_INTERVAL_MONTH) E(SQL_DL_SQL92_INTERVAL_SECOND) E(SQL_DL_SQL92_INTERVAL_YEAR) E(SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH) E(SQL_DL_SQL92_TIME) E(SQL_DL_SQL92_TIMESTAMP) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_dbms_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_DBMS_NAME, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_dbms_ver)
LIBCXX_SQL_GETINFO_IMPL(SQL_DBMS_VER, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_ddl_index)
LIBCXX_SQL_GETINFO_IMPL(SQL_DDL_INDEX, ENUM, SQLUINTEGER, E(SQL_DI_CREATE_INDEX) E(SQL_DI_DROP_INDEX) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_default_txn_isolation)
LIBCXX_SQL_GETINFO_IMPL(SQL_DEFAULT_TXN_ISOLATION, ENUM, SQLUINTEGER, E(SQL_TXN_READ_COMMITTED) E(SQL_TXN_READ_UNCOMMITTED) E(SQL_TXN_REPEATABLE_READ) E(SQL_TXN_SERIALIZABLE) )
LIBCXX_SQL_GETINFO_DECL(bool, config_get_describe_parameter)
LIBCXX_SQL_GETINFO_IMPL(SQL_DESCRIBE_PARAMETER, bool, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_dm_ver)
LIBCXX_SQL_GETINFO_IMPL(SQL_DM_VER, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_driver_hdesc)
LIBCXX_SQL_GETINFO_IMPL(SQL_DRIVER_HDESC, SQLULEN, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_driver_hlib)
LIBCXX_SQL_GETINFO_IMPL(SQL_DRIVER_HLIB, SQLULEN, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_driver_hstmt)
LIBCXX_SQL_GETINFO_IMPL(SQL_DRIVER_HSTMT, SQLULEN, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_driver_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_DRIVER_NAME, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_driver_odbc_ver)
LIBCXX_SQL_GETINFO_IMPL(SQL_DRIVER_ODBC_VER, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_driver_ver)
LIBCXX_SQL_GETINFO_IMPL(SQL_DRIVER_VER, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_assertion)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_ASSERTION, ENUM, SQLUINTEGER, E(SQL_DA_DROP_ASSERTION) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_character_set)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_CHARACTER_SET, ENUM, SQLUINTEGER, E(SQL_DCS_DROP_CHARACTER_SET) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_collation)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_COLLATION, ENUM, SQLUINTEGER, E(SQL_DC_DROP_COLLATION) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_domain)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_DOMAIN, ENUM, SQLUINTEGER, E(SQL_DD_CASCADE) E(SQL_DD_DROP_DOMAIN) E(SQL_DD_RESTRICT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_schema)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_SCHEMA, ENUM, SQLUINTEGER, E(SQL_DS_CASCADE) E(SQL_DS_DROP_SCHEMA) E(SQL_DS_RESTRICT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_table)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_TABLE, ENUM, SQLUINTEGER, E(SQL_DT_CASCADE) E(SQL_DT_DROP_TABLE) E(SQL_DT_RESTRICT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_translation)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_TRANSLATION, ENUM, SQLUINTEGER, E(SQL_DTR_DROP_TRANSLATION) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_drop_view)
LIBCXX_SQL_GETINFO_IMPL(SQL_DROP_VIEW, ENUM, SQLUINTEGER, E(SQL_DV_CASCADE) E(SQL_DV_DROP_VIEW) E(SQL_DV_RESTRICT) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_dynamic_cursor_attributes1)
LIBCXX_SQL_GETINFO_IMPL(SQL_DYNAMIC_CURSOR_ATTRIBUTES1, ENUM, SQLUINTEGER, E(SQL_CA1_ABSOLUTE) E(SQL_CA1_BOOKMARK) E(SQL_CA1_BULK_ADD) E(SQL_CA1_BULK_DELETE_BY_BOOKMARK) E(SQL_CA1_BULK_FETCH_BY_BOOKMARK) E(SQL_CA1_BULK_UPDATE_BY_BOOKMARK) E(SQL_CA1_LOCK_EXCLUSIVE) E(SQL_CA1_LOCK_NO_CHANGE) E(SQL_CA1_LOCK_UNLOCK) E(SQL_CA1_NEXT) E(SQL_CA1_POSITIONED_DELETE) E(SQL_CA1_POSITIONED_UPDATE) E(SQL_CA1_POS_DELETE) E(SQL_CA1_POS_POSITION) E(SQL_CA1_POS_REFRESH) E(SQL_CA1_POS_UPDATE) E(SQL_CA1_RELATIVE) E(SQL_CA1_SELECT_FOR_UPDATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_dynamic_cursor_attributes2)
LIBCXX_SQL_GETINFO_IMPL(SQL_DYNAMIC_CURSOR_ATTRIBUTES2, ENUM, SQLUINTEGER, E(SQL_CA2_CRC_APPROXIMATE) E(SQL_CA2_CRC_EXACT) E(SQL_CA2_LOCK_CONCURRENCY) E(SQL_CA2_MAX_ROWS_AFFECTS_ALL) E(SQL_CA2_MAX_ROWS_CATALOG) E(SQL_CA2_MAX_ROWS_DELETE) E(SQL_CA2_MAX_ROWS_INSERT) E(SQL_CA2_MAX_ROWS_SELECT) E(SQL_CA2_MAX_ROWS_UPDATE) E(SQL_CA2_OPT_ROWVER_CONCURRENCY) E(SQL_CA2_OPT_VALUES_CONCURRENCY) E(SQL_CA2_READ_ONLY_CONCURRENCY) E(SQL_CA2_SENSITIVITY_ADDITIONS) E(SQL_CA2_SENSITIVITY_DELETIONS) E(SQL_CA2_SENSITIVITY_UPDATES) E(SQL_CA2_SIMULATE_NON_UNIQUE) E(SQL_CA2_SIMULATE_TRY_UNIQUE) E(SQL_CA2_SIMULATE_UNIQUE) E(SQL_SC_NON_UNIQUE) E(SQL_SC_TRY_UNIQUE) E(SQL_SC_UNIQUE) )
LIBCXX_SQL_GETINFO_DECL(bool, config_get_expressions_in_orderby)
LIBCXX_SQL_GETINFO_IMPL(SQL_EXPRESSIONS_IN_ORDERBY, bool, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_file_usage)
LIBCXX_SQL_GETINFO_IMPL(SQL_FILE_USAGE, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_forward_only_cursor_attributes1)
LIBCXX_SQL_GETINFO_IMPL(SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1, ENUM, SQLUINTEGER, E(SQL_CA1_BULK_ADD) E(SQL_CA1_BULK_DELETE_BY_BOOKMARK) E(SQL_CA1_BULK_FETCH_BY_BOOKMARK) E(SQL_CA1_BULK_UPDATE_BY_BOOKMARK) E(SQL_CA1_LOCK_EXCLUSIVE) E(SQL_CA1_LOCK_NO_CHANGE) E(SQL_CA1_LOCK_UNLOCK) E(SQL_CA1_NEXT) E(SQL_CA1_POSITIONED_DELETE) E(SQL_CA1_POSITIONED_UPDATE) E(SQL_CA1_POS_DELETE) E(SQL_CA1_POS_POSITION) E(SQL_CA1_POS_REFRESH) E(SQL_CA1_POS_UPDATE) E(SQL_CA1_SELECT_FOR_UPDATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_forward_only_cursor_attributes2)
LIBCXX_SQL_GETINFO_IMPL(SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2, ENUM, SQLUINTEGER, E(SQL_CA2_CRC_APPROXIMATE) E(SQL_CA2_CRC_EXACT) E(SQL_CA2_LOCK_CONCURRENCY) E(SQL_CA2_MAX_ROWS_AFFECTS_ALL) E(SQL_CA2_MAX_ROWS_CATALOG) E(SQL_CA2_MAX_ROWS_DELETE) E(SQL_CA2_MAX_ROWS_INSERT) E(SQL_CA2_MAX_ROWS_SELECT) E(SQL_CA2_MAX_ROWS_UPDATE) E(SQL_CA2_OPT_ROWVER_CONCURRENCY) E(SQL_CA2_OPT_VALUES_CONCURRENCY) E(SQL_CA2_READ_ONLY_CONCURRENCY) E(SQL_CA2_SENSITIVITY_ADDITIONS) E(SQL_CA2_SENSITIVITY_DELETIONS) E(SQL_CA2_SENSITIVITY_UPDATES) E(SQL_CA2_SIMULATE_NON_UNIQUE) E(SQL_CA2_SIMULATE_TRY_UNIQUE) E(SQL_CA2_SIMULATE_UNIQUE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_getdata_extensions)
LIBCXX_SQL_GETINFO_IMPL(SQL_GETDATA_EXTENSIONS, ENUM, SQLUINTEGER, E(SQL_GD_ANY_COLUMN) E(SQL_GD_ANY_ORDER) E(SQL_GD_BLOCK) E(SQL_GD_BOUND) E(SQL_GD_OUTPUT_PARAMS) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_group_by)
LIBCXX_SQL_GETINFO_IMPL(SQL_GROUP_BY, ENUM, SQLUSMALLINT, E(SQL_GB_COLLATE) E(SQL_GB_GROUP_BY_CONTAINS_SELECT) E(SQL_GB_GROUP_BY_EQUALS_SELECT) E(SQL_GB_NOT_SUPPORTED) E(SQL_GB_NO_RELATION) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_identifier_case)
LIBCXX_SQL_GETINFO_IMPL(SQL_IDENTIFIER_CASE, ENUM, SQLUSMALLINT, E(SQL_IC_LOWER) E(SQL_IC_MIXED) E(SQL_IC_SENSITIVE) E(SQL_IC_UPPER) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_identifier_quote_char)
LIBCXX_SQL_GETINFO_IMPL(SQL_IDENTIFIER_QUOTE_CHAR, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_index_keywords)
LIBCXX_SQL_GETINFO_IMPL(SQL_INDEX_KEYWORDS, ENUM, SQLUINTEGER, E(SQL_IK_ALL) E(SQL_IK_ASC) E(SQL_IK_DESC) E(SQL_IK_NONE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_info_schema_views)
LIBCXX_SQL_GETINFO_IMPL(SQL_INFO_SCHEMA_VIEWS, ENUM, SQLUINTEGER, E(SQL_ISV_ASSERTIONS) E(SQL_ISV_CHARACTER_SETS) E(SQL_ISV_CHECK_CONSTRAINTS) E(SQL_ISV_COLLATIONS) E(SQL_ISV_COLUMNS) E(SQL_ISV_COLUMN_DOMAIN_USAGE) E(SQL_ISV_COLUMN_PRIVILEGES) E(SQL_ISV_CONSTRAINT_COLUMN_USAGE) E(SQL_ISV_CONSTRAINT_TABLE_USAGE) E(SQL_ISV_DOMAINS) E(SQL_ISV_DOMAIN_CONSTRAINTS) E(SQL_ISV_KEY_COLUMN_USAGE) E(SQL_ISV_REFERENTIAL_CONSTRAINTS) E(SQL_ISV_SCHEMATA) E(SQL_ISV_SQL_LANGUAGES) E(SQL_ISV_TABLES) E(SQL_ISV_TABLE_CONSTRAINTS) E(SQL_ISV_TABLE_PRIVILEGES) E(SQL_ISV_TRANSLATIONS) E(SQL_ISV_USAGE_PRIVILEGES) E(SQL_ISV_VIEWS) E(SQL_ISV_VIEW_COLUMN_USAGE) E(SQL_ISV_VIEW_TABLE_USAGE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_insert_statement)
LIBCXX_SQL_GETINFO_IMPL(SQL_INSERT_STATEMENT, ENUM, SQLUINTEGER, E(SQL_IS_INSERT_LITERALS) E(SQL_IS_INSERT_SEARCHED) E(SQL_IS_SELECT_INTO) )
LIBCXX_SQL_GETINFO_DECL(bool, config_get_integrity)
LIBCXX_SQL_GETINFO_IMPL(SQL_INTEGRITY, bool, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_keyset_cursor_attributes1)
LIBCXX_SQL_GETINFO_IMPL(SQL_KEYSET_CURSOR_ATTRIBUTES1, ENUM, SQLUINTEGER, E(SQL_CA1_ABSOLUTE) E(SQL_CA1_BOOKMARK) E(SQL_CA1_BULK_ADD) E(SQL_CA1_BULK_DELETE_BY_BOOKMARK) E(SQL_CA1_BULK_FETCH_BY_BOOKMARK) E(SQL_CA1_BULK_UPDATE_BY_BOOKMARK) E(SQL_CA1_LOCK_EXCLUSIVE) E(SQL_CA1_LOCK_NO_CHANGE) E(SQL_CA1_LOCK_UNLOCK) E(SQL_CA1_NEXT) E(SQL_CA1_POSITIONED_DELETE) E(SQL_CA1_POSITIONED_UPDATE) E(SQL_CA1_POS_DELETE) E(SQL_CA1_POS_POSITION) E(SQL_CA1_POS_REFRESH) E(SQL_CA1_POS_UPDATE) E(SQL_CA1_RELATIVE) E(SQL_CA1_SELECT_FOR_UPDATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_keyset_cursor_attributes2)
LIBCXX_SQL_GETINFO_IMPL(SQL_KEYSET_CURSOR_ATTRIBUTES2, ENUM, SQLUINTEGER, E(SQL_CA2_CRC_APPROXIMATE) E(SQL_CA2_CRC_EXACT) E(SQL_CA2_LOCK_CONCURRENCY) E(SQL_CA2_MAX_ROWS_AFFECTS_ALL) E(SQL_CA2_MAX_ROWS_CATALOG) E(SQL_CA2_MAX_ROWS_DELETE) E(SQL_CA2_MAX_ROWS_INSERT) E(SQL_CA2_MAX_ROWS_SELECT) E(SQL_CA2_MAX_ROWS_UPDATE) E(SQL_CA2_OPT_ROWVER_CONCURRENCY) E(SQL_CA2_OPT_VALUES_CONCURRENCY) E(SQL_CA2_READ_ONLY_CONCURRENCY) E(SQL_CA2_SENSITIVITY_ADDITIONS) E(SQL_CA2_SENSITIVITY_DELETIONS) E(SQL_CA2_SENSITIVITY_UPDATES) E(SQL_CA2_SIMULATE_NON_UNIQUE) E(SQL_CA2_SIMULATE_TRY_UNIQUE) E(SQL_CA2_SIMULATE_UNIQUE) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_keywords)
LIBCXX_SQL_GETINFO_IMPL(SQL_KEYWORDS, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_like_escape_clause)
LIBCXX_SQL_GETINFO_IMPL(SQL_LIKE_ESCAPE_CLAUSE, bool, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_async_concurrent_statements)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_ASYNC_CONCURRENT_STATEMENTS, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_binary_literal_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_BINARY_LITERAL_LEN, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_max_catalog_name_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_CATALOG_NAME_LEN, ENUM, SQLUSMALLINT, E(SQL_MAX_QUALIFIER_NAME_LEN) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_char_literal_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_CHAR_LITERAL_LEN, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_column_name_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_COLUMN_NAME_LEN, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_columns_in_group_by)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_COLUMNS_IN_GROUP_BY, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_columns_in_index)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_COLUMNS_IN_INDEX, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_columns_in_order_by)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_COLUMNS_IN_ORDER_BY, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_columns_in_select)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_COLUMNS_IN_SELECT, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_columns_in_table)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_COLUMNS_IN_TABLE, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_concurrent_activities)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_CONCURRENT_ACTIVITIES, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_cursor_name_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_CURSOR_NAME_LEN, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_driver_connections)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_DRIVER_CONNECTIONS, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_identifier_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_IDENTIFIER_LEN, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_index_size)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_INDEX_SIZE, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_procedure_name_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_PROCEDURE_NAME_LEN, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_row_size)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_ROW_SIZE, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_max_row_size_includes_long)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_ROW_SIZE_INCLUDES_LONG, bool, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_max_schema_name_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_SCHEMA_NAME_LEN, ENUM, SQLUSMALLINT, E(SQL_MAX_OWNER_NAME_LEN) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_statement_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_STATEMENT_LEN, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_table_name_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_TABLE_NAME_LEN, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_tables_in_select)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_TABLES_IN_SELECT, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_max_user_name_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_MAX_USER_NAME_LEN, SQLUSMALLINT, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_mult_result_sets)
LIBCXX_SQL_GETINFO_IMPL(SQL_MULT_RESULT_SETS, bool, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_multiple_active_txn)
LIBCXX_SQL_GETINFO_IMPL(SQL_MULTIPLE_ACTIVE_TXN, bool, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_need_long_data_len)
LIBCXX_SQL_GETINFO_IMPL(SQL_NEED_LONG_DATA_LEN, bool, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_non_nullable_columns)
LIBCXX_SQL_GETINFO_IMPL(SQL_NON_NULLABLE_COLUMNS, ENUM, SQLUSMALLINT, E(SQL_NNC_NON_NULL) E(SQL_NNC_NULL) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_null_collation)
LIBCXX_SQL_GETINFO_IMPL(SQL_NULL_COLLATION, ENUM, SQLUSMALLINT, E(SQL_NC_END) E(SQL_NC_HIGH) E(SQL_NC_LOW) E(SQL_NC_START) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_numeric_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_NUMERIC_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_FN_NUM_ABS) E(SQL_FN_NUM_ACOS) E(SQL_FN_NUM_ASIN) E(SQL_FN_NUM_ATAN) E(SQL_FN_NUM_ATAN2) E(SQL_FN_NUM_CEILING) E(SQL_FN_NUM_COS) E(SQL_FN_NUM_COT) E(SQL_FN_NUM_DEGREES) E(SQL_FN_NUM_EXP) E(SQL_FN_NUM_FLOOR) E(SQL_FN_NUM_LOG) E(SQL_FN_NUM_LOG10) E(SQL_FN_NUM_MOD) E(SQL_FN_NUM_PI) E(SQL_FN_NUM_POWER) E(SQL_FN_NUM_RADIANS) E(SQL_FN_NUM_RAND) E(SQL_FN_NUM_ROUND) E(SQL_FN_NUM_SIGN) E(SQL_FN_NUM_SIN) E(SQL_FN_NUM_SQRT) E(SQL_FN_NUM_TAN) E(SQL_FN_NUM_TRUNCATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_odbc_interface_conformance)
LIBCXX_SQL_GETINFO_IMPL(SQL_ODBC_INTERFACE_CONFORMANCE, ENUM, SQLUINTEGER, E(SQL_OIC_CORE) E(SQL_OIC_LEVEL1) E(SQL_OIC_LEVEL2) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_odbc_ver)
LIBCXX_SQL_GETINFO_IMPL(SQL_ODBC_VER, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_oj_capabilities)
LIBCXX_SQL_GETINFO_IMPL(SQL_OJ_CAPABILITIES, ENUM, SQLUINTEGER, E(SQL_OJ_ALL_COMPARISON_OPS) E(SQL_OJ_FULL) E(SQL_OJ_INNER) E(SQL_OJ_LEFT) E(SQL_OJ_NESTED) E(SQL_OJ_NOT_ORDERED) E(SQL_OJ_RIGHT) )
LIBCXX_SQL_GETINFO_DECL(bool, config_get_order_by_columns_in_select)
LIBCXX_SQL_GETINFO_IMPL(SQL_ORDER_BY_COLUMNS_IN_SELECT, bool, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_param_array_row_counts)
LIBCXX_SQL_GETINFO_IMPL(SQL_PARAM_ARRAY_ROW_COUNTS, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_param_array_selects)
LIBCXX_SQL_GETINFO_IMPL(SQL_PARAM_ARRAY_SELECTS, ENUM, SQLUINTEGER, E(SQL_PAS_BATCH) E(SQL_PAS_NO_BATCH) E(SQL_PAS_NO_SELECT) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_procedure_term)
LIBCXX_SQL_GETINFO_IMPL(SQL_PROCEDURE_TERM, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(bool, config_get_procedures)
LIBCXX_SQL_GETINFO_IMPL(SQL_PROCEDURES, bool, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_pos_operations)
LIBCXX_SQL_GETINFO_IMPL(SQL_POS_OPERATIONS, ENUM, SQLINTEGER, E(SQL_POS_ADD) E(SQL_POS_DELETE) E(SQL_POS_POSITION) E(SQL_POS_REFRESH) E(SQL_POS_UPDATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_quoted_identifier_case)
LIBCXX_SQL_GETINFO_IMPL(SQL_QUOTED_IDENTIFIER_CASE, ENUM, SQLUSMALLINT, E(SQL_IC_LOWER) E(SQL_IC_MIXED) E(SQL_IC_SENSITIVE) E(SQL_IC_UPPER) )
LIBCXX_SQL_GETINFO_DECL(bool, config_get_row_updates)
LIBCXX_SQL_GETINFO_IMPL(SQL_ROW_UPDATES, bool, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_schema_term)
LIBCXX_SQL_GETINFO_IMPL(SQL_SCHEMA_TERM, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_schema_usage)
LIBCXX_SQL_GETINFO_IMPL(SQL_SCHEMA_USAGE, ENUM, SQLUINTEGER, E(SQL_SU_DML_STATEMENTS) E(SQL_SU_INDEX_DEFINITION) E(SQL_SU_PRIVILEGE_DEFINITION) E(SQL_SU_PROCEDURE_INVOCATION) E(SQL_SU_TABLE_DEFINITION) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_scroll_options)
LIBCXX_SQL_GETINFO_IMPL(SQL_SCROLL_OPTIONS, ENUM, SQLUINTEGER, E(SQL_SO_DYNAMIC) E(SQL_SO_FORWARD_ONLY) E(SQL_SO_KEYSET_DRIVEN) E(SQL_SO_MIXED) E(SQL_SO_STATIC) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_search_pattern_escape)
LIBCXX_SQL_GETINFO_IMPL(SQL_SEARCH_PATTERN_ESCAPE, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_server_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_SERVER_NAME, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_special_characters)
LIBCXX_SQL_GETINFO_IMPL(SQL_SPECIAL_CHARACTERS, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_sql_conformance)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL_CONFORMANCE, ENUM, SQLUINTEGER, E(SQL_SC_FIPS127_2_TRANSITIONAL) E(SQL_SC_SQL92_ENTRY) E(SQL_SC_SQL92_FULL) E(SQL_SC_SQL92_INTERMEDIATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_sql92_datetime_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_DATETIME_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_SDF_CURRENT_DATE) E(SQL_SDF_CURRENT_TIME) E(SQL_SDF_CURRENT_TIMESTAMP) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_sql92_foreign_key_delete_rule)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_FOREIGN_KEY_DELETE_RULE, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(long, config_get_sql92_foreign_key_update_rule)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_FOREIGN_KEY_UPDATE_RULE, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_sql92_grant)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_GRANT, ENUM, SQLUINTEGER, E(SQL_SG_DELETE_TABLE) E(SQL_SG_INSERT_COLUMN) E(SQL_SG_INSERT_TABLE) E(SQL_SG_REFERENCES_COLUMN) E(SQL_SG_REFERENCES_TABLE) E(SQL_SG_SELECT_TABLE) E(SQL_SG_UPDATE_COLUMN) E(SQL_SG_UPDATE_TABLE) E(SQL_SG_USAGE_ON_CHARACTER_SET) E(SQL_SG_USAGE_ON_COLLATION) E(SQL_SG_USAGE_ON_DOMAIN) E(SQL_SG_USAGE_ON_TRANSLATION) E(SQL_SG_WITH_GRANT_OPTION) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_sql92_numeric_value_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_NUMERIC_VALUE_FUNCTIONS, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_sql92_predicates)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_PREDICATES, ENUM, SQLUINTEGER, E(SQL_SP_BETWEEN) E(SQL_SP_COMPARISON) E(SQL_SP_EXISTS) E(SQL_SP_IN) E(SQL_SP_ISNOTNULL) E(SQL_SP_ISNULL) E(SQL_SP_LIKE) E(SQL_SP_MATCH_FULL) E(SQL_SP_MATCH_PARTIAL) E(SQL_SP_MATCH_UNIQUE_FULL) E(SQL_SP_MATCH_UNIQUE_PARTIAL) E(SQL_SP_OVERLAPS) E(SQL_SP_QUANTIFIED_COMPARISON) E(SQL_SP_UNIQUE) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_sql92_relational_join_operators)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_RELATIONAL_JOIN_OPERATORS, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_sql92_revoke)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_REVOKE, ENUM, SQLUINTEGER, E(SQL_SR_CASCADE) E(SQL_SR_DELETE_TABLE) E(SQL_SR_GRANT_OPTION_FOR) E(SQL_SR_INSERT_COLUMN) E(SQL_SR_INSERT_TABLE) E(SQL_SR_REFERENCES_COLUMN) E(SQL_SR_REFERENCES_TABLE) E(SQL_SR_RESTRICT) E(SQL_SR_SELECT_TABLE) E(SQL_SR_UPDATE_COLUMN) E(SQL_SR_UPDATE_TABLE) E(SQL_SR_USAGE_ON_CHARACTER_SET) E(SQL_SR_USAGE_ON_COLLATION) E(SQL_SR_USAGE_ON_DOMAIN) E(SQL_SR_USAGE_ON_TRANSLATION) )
LIBCXX_SQL_GETINFO_DECL(long, config_get_sql92_row_value_constructor)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_ROW_VALUE_CONSTRUCTOR, SQLUINTEGER, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_sql92_string_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_STRING_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_SSF_CONVERT) E(SQL_SSF_LOWER) E(SQL_SSF_SUBSTRING) E(SQL_SSF_TRANSLATE) E(SQL_SSF_TRIM_BOTH) E(SQL_SSF_TRIM_LEADING) E(SQL_SSF_TRIM_TRAILING) E(SQL_SSF_UPPER) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_sql92_value_expressions)
LIBCXX_SQL_GETINFO_IMPL(SQL_SQL92_VALUE_EXPRESSIONS, ENUM, SQLUINTEGER, E(SQL_SVE_CASE) E(SQL_SVE_CAST) E(SQL_SVE_COALESCE) E(SQL_SVE_NULLIF) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_standard_cli_conformance)
LIBCXX_SQL_GETINFO_IMPL(SQL_STANDARD_CLI_CONFORMANCE, ENUM, SQLUINTEGER, E(SQL_SCC_ISO92_CLI) E(SQL_SCC_XOPEN_CLI_VERSION1) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_static_cursor_attributes1)
LIBCXX_SQL_GETINFO_IMPL(SQL_STATIC_CURSOR_ATTRIBUTES1, ENUM, SQLUINTEGER, E(SQL_CA1_ABSOLUTE) E(SQL_CA1_BOOKMARK) E(SQL_CA1_BULK_ADD) E(SQL_CA1_BULK_DELETE_BY_BOOKMARK) E(SQL_CA1_BULK_FETCH_BY_BOOKMARK) E(SQL_CA1_BULK_UPDATE_BY_BOOKMARK) E(SQL_CA1_LOCK_EXCLUSIVE) E(SQL_CA1_LOCK_NO_CHANGE) E(SQL_CA1_LOCK_UNLOCK) E(SQL_CA1_NEXT) E(SQL_CA1_POSITIONED_DELETE) E(SQL_CA1_POSITIONED_UPDATE) E(SQL_CA1_POS_DELETE) E(SQL_CA1_POS_POSITION) E(SQL_CA1_POS_REFRESH) E(SQL_CA1_POS_UPDATE) E(SQL_CA1_RELATIVE) E(SQL_CA1_SELECT_FOR_UPDATE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_static_cursor_attributes2)
LIBCXX_SQL_GETINFO_IMPL(SQL_STATIC_CURSOR_ATTRIBUTES2, ENUM, SQLUINTEGER, E(SQL_CA2_CRC_APPROXIMATE) E(SQL_CA2_CRC_EXACT) E(SQL_CA2_LOCK_CONCURRENCY) E(SQL_CA2_MAX_ROWS_AFFECTS_ALL) E(SQL_CA2_MAX_ROWS_CATALOG) E(SQL_CA2_MAX_ROWS_DELETE) E(SQL_CA2_MAX_ROWS_INSERT) E(SQL_CA2_MAX_ROWS_SELECT) E(SQL_CA2_MAX_ROWS_UPDATE) E(SQL_CA2_OPT_ROWVER_CONCURRENCY) E(SQL_CA2_OPT_VALUES_CONCURRENCY) E(SQL_CA2_READ_ONLY_CONCURRENCY) E(SQL_CA2_SENSITIVITY_ADDITIONS) E(SQL_CA2_SENSITIVITY_DELETIONS) E(SQL_CA2_SENSITIVITY_UPDATES) E(SQL_CA2_SIMULATE_NON_UNIQUE) E(SQL_CA2_SIMULATE_TRY_UNIQUE) E(SQL_CA2_SIMULATE_UNIQUE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_string_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_STRING_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_FN_STR_ASCII) E(SQL_FN_STR_BIT_LENGTH) E(SQL_FN_STR_CHAR) E(SQL_FN_STR_CHARACTER_LENGTH) E(SQL_FN_STR_CHAR_LENGTH) E(SQL_FN_STR_CONCAT) E(SQL_FN_STR_DIFFERENCE) E(SQL_FN_STR_INSERT) E(SQL_FN_STR_LCASE) E(SQL_FN_STR_LEFT) E(SQL_FN_STR_LENGTH) E(SQL_FN_STR_LOCATE) E(SQL_FN_STR_LOCATE_2) E(SQL_FN_STR_LTRIM) E(SQL_FN_STR_OCTET_LENGTH) E(SQL_FN_STR_POSITION) E(SQL_FN_STR_REPEAT) E(SQL_FN_STR_REPLACE) E(SQL_FN_STR_RIGHT) E(SQL_FN_STR_RTRIM) E(SQL_FN_STR_SOUNDEX) E(SQL_FN_STR_SPACE) E(SQL_FN_STR_SUBSTRING) E(SQL_FN_STR_UCASE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_subqueries)
LIBCXX_SQL_GETINFO_IMPL(SQL_SUBQUERIES, ENUM, SQLUINTEGER, E(SQL_SQ_COMPARISON) E(SQL_SQ_CORRELATED_SUBQUERIES) E(SQL_SQ_EXISTS) E(SQL_SQ_IN) E(SQL_SQ_QUANTIFIED) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_system_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_SYSTEM_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_FN_SYS_DBNAME) E(SQL_FN_SYS_IFNULL) E(SQL_FN_SYS_USERNAME) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_table_term)
LIBCXX_SQL_GETINFO_IMPL(SQL_TABLE_TERM, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_timedate_add_intervals)
LIBCXX_SQL_GETINFO_IMPL(SQL_TIMEDATE_ADD_INTERVALS, ENUM, SQLUINTEGER, E(SQL_FN_TSI_DAY) E(SQL_FN_TSI_FRAC_SECOND) E(SQL_FN_TSI_HOUR) E(SQL_FN_TSI_MINUTE) E(SQL_FN_TSI_MONTH) E(SQL_FN_TSI_QUARTER) E(SQL_FN_TSI_SECOND) E(SQL_FN_TSI_WEEK) E(SQL_FN_TSI_YEAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_timedate_diff_intervals)
LIBCXX_SQL_GETINFO_IMPL(SQL_TIMEDATE_DIFF_INTERVALS, ENUM, SQLUINTEGER, E(SQL_FN_TSI_DAY) E(SQL_FN_TSI_FRAC_SECOND) E(SQL_FN_TSI_HOUR) E(SQL_FN_TSI_MINUTE) E(SQL_FN_TSI_MONTH) E(SQL_FN_TSI_QUARTER) E(SQL_FN_TSI_SECOND) E(SQL_FN_TSI_WEEK) E(SQL_FN_TSI_YEAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_timedate_functions)
LIBCXX_SQL_GETINFO_IMPL(SQL_TIMEDATE_FUNCTIONS, ENUM, SQLUINTEGER, E(SQL_FN_TD_CURDATE) E(SQL_FN_TD_CURRENT_DATE) E(SQL_FN_TD_CURRENT_TIME) E(SQL_FN_TD_CURRENT_TIMESTAMP) E(SQL_FN_TD_CURTIME) E(SQL_FN_TD_DAYNAME) E(SQL_FN_TD_DAYOFMONTH) E(SQL_FN_TD_DAYOFWEEK) E(SQL_FN_TD_DAYOFYEAR) E(SQL_FN_TD_EXTRACT) E(SQL_FN_TD_HOUR) E(SQL_FN_TD_MINUTE) E(SQL_FN_TD_MONTH) E(SQL_FN_TD_MONTHNAME) E(SQL_FN_TD_NOW) E(SQL_FN_TD_QUARTER) E(SQL_FN_TD_SECOND) E(SQL_FN_TD_TIMESTAMPADD) E(SQL_FN_TD_TIMESTAMPDIFF) E(SQL_FN_TD_WEEK) E(SQL_FN_TD_YEAR) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_txn_capable)
LIBCXX_SQL_GETINFO_IMPL(SQL_TXN_CAPABLE, ENUM, SQLUSMALLINT, E(SQL_TC_ALL) E(SQL_TC_DDL_COMMIT) E(SQL_TC_DDL_IGNORE) E(SQL_TC_DML) E(SQL_TC_NONE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_txn_isolation_option)
LIBCXX_SQL_GETINFO_IMPL(SQL_TXN_ISOLATION_OPTION, ENUM, SQLUINTEGER, E(SQL_TXN_READ_COMMITTED) E(SQL_TXN_READ_UNCOMMITTED) E(SQL_TXN_REPEATABLE_READ) E(SQL_TXN_SERIALIZABLE) )
LIBCXX_SQL_GETINFO_DECL(config_bitmask_t, config_get_union)
LIBCXX_SQL_GETINFO_IMPL(SQL_UNION, ENUM, SQLUINTEGER, E(SQL_U_UNION) E(SQL_U_UNION_ALL) )
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_user_name)
LIBCXX_SQL_GETINFO_IMPL(SQL_USER_NAME, STRING, ,)
LIBCXX_SQL_GETINFO_DECL(std::string, config_get_xopen_cli_year)
LIBCXX_SQL_GETINFO_IMPL(SQL_XOPEN_CLI_YEAR, STRING, ,)
